<?xml version="1.0" encoding="UTF-8"?>
<testng-results ignored="10" total="47" passed="37" failed="0" skipped="0">
  <reporter-output>
  </reporter-output>
  <suite started-at="2022-08-02T22:31:28 IST" name="Suite" finished-at="2022-08-02T22:32:32 IST" duration-ms="63380">
    <groups>
    </groups>
    <test started-at="2022-08-02T22:31:28 IST" name="ChromeTest" finished-at="2022-08-02T22:32:32 IST" duration-ms="63380">
      <class name="testCases.ManagedeliveryBoy">
        <test-method is-config="true" signature="beforeClass(java.lang.String)[pri:0, instance:testCases.ManagedeliveryBoy@3a7442c7]" started-at="2022-08-02T22:32:10 IST" name="beforeClass" finished-at="2022-08-02T22:32:13 IST" duration-ms="2051" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeClass -->
        <test-method signature="validateAddNewDeliveryBoy()[pri:1, instance:testCases.ManagedeliveryBoy@3a7442c7]" started-at="2022-08-02T22:32:13 IST" name="validateAddNewDeliveryBoy" finished-at="2022-08-02T22:32:16 IST" duration-ms="3931" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- validateAddNewDeliveryBoy -->
        <test-method is-config="true" signature="beforeMethod()[pri:0, instance:testCases.ManagedeliveryBoy@3a7442c7]" started-at="2022-08-02T22:32:13 IST" name="beforeMethod" finished-at="2022-08-02T22:32:13 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method is-config="true" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:testCases.ManagedeliveryBoy@3a7442c7]" started-at="2022-08-02T22:32:16 IST" name="afterMethod" finished-at="2022-08-02T22:32:16 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=validateAddNewDeliveryBoy status=SUCCESS method=ManagedeliveryBoy.validateAddNewDeliveryBoy()[pri:1, instance:testCases.ManagedeliveryBoy@3a7442c7] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method signature="validateSearchDeliveryBoyWithValidName()[pri:2, instance:testCases.ManagedeliveryBoy@3a7442c7]" started-at="2022-08-02T22:32:16 IST" name="validateSearchDeliveryBoyWithValidName" finished-at="2022-08-02T22:32:17 IST" duration-ms="849" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- validateSearchDeliveryBoyWithValidName -->
        <test-method is-config="true" signature="beforeMethod()[pri:0, instance:testCases.ManagedeliveryBoy@3a7442c7]" started-at="2022-08-02T22:32:16 IST" name="beforeMethod" finished-at="2022-08-02T22:32:16 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method is-config="true" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:testCases.ManagedeliveryBoy@3a7442c7]" started-at="2022-08-02T22:32:17 IST" name="afterMethod" finished-at="2022-08-02T22:32:17 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=validateSearchDeliveryBoyWithValidName status=SUCCESS method=ManagedeliveryBoy.validateSearchDeliveryBoyWithValidName()[pri:2, instance:testCases.ManagedeliveryBoy@3a7442c7] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="beforeMethod()[pri:0, instance:testCases.ManagedeliveryBoy@3a7442c7]" started-at="2022-08-02T22:32:17 IST" name="beforeMethod" finished-at="2022-08-02T22:32:17 IST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="validateSearchDeliveryBoyWithValidPhoneNumber()[pri:3, instance:testCases.ManagedeliveryBoy@3a7442c7]" started-at="2022-08-02T22:32:17 IST" name="validateSearchDeliveryBoyWithValidPhoneNumber" finished-at="2022-08-02T22:32:18 IST" duration-ms="911" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- validateSearchDeliveryBoyWithValidPhoneNumber -->
        <test-method is-config="true" signature="beforeMethod()[pri:0, instance:testCases.ManagedeliveryBoy@3a7442c7]" started-at="2022-08-02T22:32:18 IST" name="beforeMethod" finished-at="2022-08-02T22:32:18 IST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method is-config="true" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:testCases.ManagedeliveryBoy@3a7442c7]" started-at="2022-08-02T22:32:18 IST" name="afterMethod" finished-at="2022-08-02T22:32:18 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=validateSearchDeliveryBoyWithValidPhoneNumber status=SUCCESS method=ManagedeliveryBoy.validateSearchDeliveryBoyWithValidPhoneNumber()[pri:3, instance:testCases.ManagedeliveryBoy@3a7442c7] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method signature="validateSearchDeliveryBoyWithValidEmail()[pri:4, instance:testCases.ManagedeliveryBoy@3a7442c7]" started-at="2022-08-02T22:32:18 IST" name="validateSearchDeliveryBoyWithValidEmail" finished-at="2022-08-02T22:32:19 IST" duration-ms="833" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- validateSearchDeliveryBoyWithValidEmail -->
        <test-method is-config="true" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:testCases.ManagedeliveryBoy@3a7442c7]" started-at="2022-08-02T22:32:19 IST" name="afterMethod" finished-at="2022-08-02T22:32:19 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=validateSearchDeliveryBoyWithValidEmail status=SUCCESS method=ManagedeliveryBoy.validateSearchDeliveryBoyWithValidEmail()[pri:4, instance:testCases.ManagedeliveryBoy@3a7442c7] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="beforeMethod()[pri:0, instance:testCases.ManagedeliveryBoy@3a7442c7]" started-at="2022-08-02T22:32:19 IST" name="beforeMethod" finished-at="2022-08-02T22:32:19 IST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="validateSearchDeliveryBoyWithInvalidName()[pri:5, instance:testCases.ManagedeliveryBoy@3a7442c7]" started-at="2022-08-02T22:32:19 IST" name="validateSearchDeliveryBoyWithInvalidName" finished-at="2022-08-02T22:32:20 IST" duration-ms="774" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- validateSearchDeliveryBoyWithInvalidName -->
        <test-method is-config="true" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:testCases.ManagedeliveryBoy@3a7442c7]" started-at="2022-08-02T22:32:20 IST" name="afterMethod" finished-at="2022-08-02T22:32:20 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=validateSearchDeliveryBoyWithInvalidName status=SUCCESS method=ManagedeliveryBoy.validateSearchDeliveryBoyWithInvalidName()[pri:5, instance:testCases.ManagedeliveryBoy@3a7442c7] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method signature="validateSearchDeliveryBoyWithInvalidPhoneNumber()[pri:6, instance:testCases.ManagedeliveryBoy@3a7442c7]" started-at="2022-08-02T22:32:20 IST" name="validateSearchDeliveryBoyWithInvalidPhoneNumber" finished-at="2022-08-02T22:32:21 IST" duration-ms="850" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- validateSearchDeliveryBoyWithInvalidPhoneNumber -->
        <test-method is-config="true" signature="beforeMethod()[pri:0, instance:testCases.ManagedeliveryBoy@3a7442c7]" started-at="2022-08-02T22:32:20 IST" name="beforeMethod" finished-at="2022-08-02T22:32:20 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method is-config="true" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:testCases.ManagedeliveryBoy@3a7442c7]" started-at="2022-08-02T22:32:21 IST" name="afterMethod" finished-at="2022-08-02T22:32:21 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=validateSearchDeliveryBoyWithInvalidPhoneNumber status=SUCCESS method=ManagedeliveryBoy.validateSearchDeliveryBoyWithInvalidPhoneNumber()[pri:6, instance:testCases.ManagedeliveryBoy@3a7442c7] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="beforeMethod()[pri:0, instance:testCases.ManagedeliveryBoy@3a7442c7]" started-at="2022-08-02T22:32:21 IST" name="beforeMethod" finished-at="2022-08-02T22:32:21 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="validateSearchDeliveryBoyWithInvalidEmail()[pri:7, instance:testCases.ManagedeliveryBoy@3a7442c7]" started-at="2022-08-02T22:32:21 IST" name="validateSearchDeliveryBoyWithInvalidEmail" finished-at="2022-08-02T22:32:21 IST" duration-ms="776" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- validateSearchDeliveryBoyWithInvalidEmail -->
        <test-method is-config="true" signature="beforeMethod()[pri:0, instance:testCases.ManagedeliveryBoy@3a7442c7]" started-at="2022-08-02T22:32:21 IST" name="beforeMethod" finished-at="2022-08-02T22:32:21 IST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method is-config="true" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:testCases.ManagedeliveryBoy@3a7442c7]" started-at="2022-08-02T22:32:21 IST" name="afterMethod" finished-at="2022-08-02T22:32:21 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=validateSearchDeliveryBoyWithInvalidEmail status=SUCCESS method=ManagedeliveryBoy.validateSearchDeliveryBoyWithInvalidEmail()[pri:7, instance:testCases.ManagedeliveryBoy@3a7442c7] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method signature="validateUpdateDeliveryBoy()[pri:8, instance:testCases.ManagedeliveryBoy@3a7442c7]" started-at="2022-08-02T22:32:21 IST" name="validateUpdateDeliveryBoy" finished-at="2022-08-02T22:32:23 IST" duration-ms="1382" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- validateUpdateDeliveryBoy -->
        <test-method signature="validateActiveButtonStatusOfDeliveryBoy()[pri:9, instance:testCases.ManagedeliveryBoy@3a7442c7]" started-at="2022-08-02T22:32:23 IST" name="validateActiveButtonStatusOfDeliveryBoy" finished-at="2022-08-02T22:32:23 IST" duration-ms="82" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- validateActiveButtonStatusOfDeliveryBoy -->
        <test-method is-config="true" signature="beforeMethod()[pri:0, instance:testCases.ManagedeliveryBoy@3a7442c7]" started-at="2022-08-02T22:32:23 IST" name="beforeMethod" finished-at="2022-08-02T22:32:23 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method is-config="true" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:testCases.ManagedeliveryBoy@3a7442c7]" started-at="2022-08-02T22:32:23 IST" name="afterMethod" finished-at="2022-08-02T22:32:23 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=validateUpdateDeliveryBoy status=SUCCESS method=ManagedeliveryBoy.validateUpdateDeliveryBoy()[pri:8, instance:testCases.ManagedeliveryBoy@3a7442c7] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method signature="validateDeleteDeliveryBoy()[pri:9, instance:testCases.ManagedeliveryBoy@3a7442c7]" started-at="2022-08-02T22:32:23 IST" name="validateDeleteDeliveryBoy" finished-at="2022-08-02T22:32:23 IST" duration-ms="489" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- validateDeleteDeliveryBoy -->
        <test-method is-config="true" signature="beforeMethod()[pri:0, instance:testCases.ManagedeliveryBoy@3a7442c7]" started-at="2022-08-02T22:32:23 IST" name="beforeMethod" finished-at="2022-08-02T22:32:23 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method is-config="true" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:testCases.ManagedeliveryBoy@3a7442c7]" started-at="2022-08-02T22:32:23 IST" name="afterMethod" finished-at="2022-08-02T22:32:23 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=validateActiveButtonStatusOfDeliveryBoy status=SUCCESS method=ManagedeliveryBoy.validateActiveButtonStatusOfDeliveryBoy()[pri:9, instance:testCases.ManagedeliveryBoy@3a7442c7] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:testCases.ManagedeliveryBoy@3a7442c7]" started-at="2022-08-02T22:32:23 IST" name="afterMethod" finished-at="2022-08-02T22:32:23 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=validateDeleteDeliveryBoy status=SUCCESS method=ManagedeliveryBoy.validateDeleteDeliveryBoy()[pri:9, instance:testCases.ManagedeliveryBoy@3a7442c7] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="afterClass()[pri:0, instance:testCases.ManagedeliveryBoy@3a7442c7]" started-at="2022-08-02T22:32:23 IST" name="afterClass" finished-at="2022-08-02T22:32:24 IST" duration-ms="180" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterClass -->
      </class> <!-- testCases.ManagedeliveryBoy -->
      <class name="testCases.ManagePages">
        <test-method is-config="true" signature="beforeClass(java.lang.String)[pri:0, instance:testCases.ManagePages@53045c6c]" started-at="2022-08-02T22:31:38 IST" name="beforeClass" finished-at="2022-08-02T22:31:40 IST" duration-ms="2104" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeClass -->
        <test-method is-config="true" signature="beforeMethod()[pri:0, instance:testCases.ManagePages@53045c6c]" started-at="2022-08-02T22:31:40 IST" name="beforeMethod" finished-at="2022-08-02T22:31:40 IST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="validateManagePagesSearchOptionWithPageName()[pri:1, instance:testCases.ManagePages@53045c6c]" started-at="2022-08-02T22:31:40 IST" name="validateManagePagesSearchOptionWithPageName" finished-at="2022-08-02T22:31:44 IST" duration-ms="3690" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- validateManagePagesSearchOptionWithPageName -->
        <test-method is-config="true" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:testCases.ManagePages@53045c6c]" started-at="2022-08-02T22:31:44 IST" name="afterMethod" finished-at="2022-08-02T22:31:44 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=validateManagePagesSearchOptionWithPageName status=SUCCESS method=ManagePages.validateManagePagesSearchOptionWithPageName()[pri:1, instance:testCases.ManagePages@53045c6c] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method signature="validateTextBoxesinAddNewPageOption()[pri:2, instance:testCases.ManagePages@53045c6c]" started-at="2022-08-02T22:31:44 IST" name="validateTextBoxesinAddNewPageOption" finished-at="2022-08-02T22:31:45 IST" duration-ms="1437" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- validateTextBoxesinAddNewPageOption -->
        <test-method is-config="true" signature="beforeMethod()[pri:0, instance:testCases.ManagePages@53045c6c]" started-at="2022-08-02T22:31:44 IST" name="beforeMethod" finished-at="2022-08-02T22:31:44 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method is-config="true" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:testCases.ManagePages@53045c6c]" started-at="2022-08-02T22:31:45 IST" name="afterMethod" finished-at="2022-08-02T22:31:45 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=validateTextBoxesinAddNewPageOption status=SUCCESS method=ManagePages.validateTextBoxesinAddNewPageOption()[pri:2, instance:testCases.ManagePages@53045c6c] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method signature="validateUploadImagesinAddNewPageOption()[pri:3, instance:testCases.ManagePages@53045c6c]" started-at="2022-08-02T22:31:45 IST" name="validateUploadImagesinAddNewPageOption" finished-at="2022-08-02T22:31:46 IST" duration-ms="408" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- validateUploadImagesinAddNewPageOption -->
        <test-method is-config="true" signature="beforeMethod()[pri:0, instance:testCases.ManagePages@53045c6c]" started-at="2022-08-02T22:31:45 IST" name="beforeMethod" finished-at="2022-08-02T22:31:45 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method is-config="true" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:testCases.ManagePages@53045c6c]" started-at="2022-08-02T22:31:46 IST" name="afterMethod" finished-at="2022-08-02T22:31:46 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=validateUploadImagesinAddNewPageOption status=SUCCESS method=ManagePages.validateUploadImagesinAddNewPageOption()[pri:3, instance:testCases.ManagePages@53045c6c] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="beforeMethod()[pri:0, instance:testCases.ManagePages@53045c6c]" started-at="2022-08-02T22:31:46 IST" name="beforeMethod" finished-at="2022-08-02T22:31:46 IST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="validateDeleteButton()[pri:4, instance:testCases.ManagePages@53045c6c]" started-at="2022-08-02T22:31:46 IST" name="validateDeleteButton" finished-at="2022-08-02T22:31:46 IST" duration-ms="386" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- validateDeleteButton -->
        <test-method is-config="true" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:testCases.ManagePages@53045c6c]" started-at="2022-08-02T22:31:46 IST" name="afterMethod" finished-at="2022-08-02T22:31:46 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=validateDeleteButton status=SUCCESS method=ManagePages.validateDeleteButton()[pri:4, instance:testCases.ManagePages@53045c6c] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method signature="validateAddNewPageOption(java.lang.String,java.lang.String,java.lang.String)[pri:5, instance:testCases.ManagePages@53045c6c]" started-at="2022-08-02T22:31:46 IST" name="validateAddNewPageOption" data-provider="manage pages" finished-at="2022-08-02T22:31:49 IST" duration-ms="3110" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[Flowers]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Flowers]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[Roses are Red Flowers]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- validateAddNewPageOption -->
        <test-method is-config="true" signature="beforeMethod()[pri:0, instance:testCases.ManagePages@53045c6c]" started-at="2022-08-02T22:31:46 IST" name="beforeMethod" finished-at="2022-08-02T22:31:46 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method is-config="true" signature="afterClass()[pri:0, instance:testCases.ManagePages@53045c6c]" started-at="2022-08-02T22:31:49 IST" name="afterClass" finished-at="2022-08-02T22:31:49 IST" duration-ms="176" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterClass -->
        <test-method is-config="true" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:testCases.ManagePages@53045c6c]" started-at="2022-08-02T22:31:49 IST" name="afterMethod" finished-at="2022-08-02T22:31:49 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=validateAddNewPageOption status=SUCCESS method=ManagePages.validateAddNewPageOption(java.lang.String,java.lang.String,java.lang.String)[pri:5, instance:testCases.ManagePages@53045c6c] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
      </class> <!-- testCases.ManagePages -->
      <class name="testCases.Login">
        <test-method is-config="true" signature="beforeTest()[pri:0, instance:testCases.Login@2034b64c]" started-at="2022-08-02T22:31:28 IST" name="beforeTest" finished-at="2022-08-02T22:31:28 IST" duration-ms="10" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeTest -->
        <test-method is-config="true" signature="beforeClass(java.lang.String)[pri:0, instance:testCases.Login@2034b64c]" started-at="2022-08-02T22:31:28 IST" name="beforeClass" finished-at="2022-08-02T22:31:32 IST" duration-ms="3773" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeClass -->
        <test-method is-config="true" signature="beforeMethod()[pri:0, instance:testCases.Login@2034b64c]" started-at="2022-08-02T22:31:32 IST" name="beforeMethod" finished-at="2022-08-02T22:31:32 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="validateLoginWithPasswordAlone()[pri:1, instance:testCases.Login@2034b64c]" started-at="2022-08-02T22:31:32 IST" name="validateLoginWithPasswordAlone" finished-at="2022-08-02T22:31:33 IST" duration-ms="891" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- validateLoginWithPasswordAlone -->
        <test-method is-config="true" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:testCases.Login@2034b64c]" started-at="2022-08-02T22:31:33 IST" name="afterMethod" finished-at="2022-08-02T22:31:33 IST" duration-ms="3" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=validateLoginWithPasswordAlone status=SUCCESS method=Login.validateLoginWithPasswordAlone()[pri:1, instance:testCases.Login@2034b64c] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="beforeMethod()[pri:0, instance:testCases.Login@2034b64c]" started-at="2022-08-02T22:31:33 IST" name="beforeMethod" finished-at="2022-08-02T22:31:33 IST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="validateLoginWithUserNameAlone()[pri:2, instance:testCases.Login@2034b64c]" started-at="2022-08-02T22:31:33 IST" name="validateLoginWithUserNameAlone" finished-at="2022-08-02T22:31:34 IST" duration-ms="671" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- validateLoginWithUserNameAlone -->
        <test-method is-config="true" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:testCases.Login@2034b64c]" started-at="2022-08-02T22:31:34 IST" name="afterMethod" finished-at="2022-08-02T22:31:34 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=validateLoginWithUserNameAlone status=SUCCESS method=Login.validateLoginWithUserNameAlone()[pri:2, instance:testCases.Login@2034b64c] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method signature="validateLoginWithCorrectUserNameAndPassword()[pri:3, instance:testCases.Login@2034b64c]" started-at="2022-08-02T22:31:34 IST" name="validateLoginWithCorrectUserNameAndPassword" finished-at="2022-08-02T22:31:36 IST" duration-ms="2353" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- validateLoginWithCorrectUserNameAndPassword -->
        <test-method is-config="true" signature="beforeMethod()[pri:0, instance:testCases.Login@2034b64c]" started-at="2022-08-02T22:31:34 IST" name="beforeMethod" finished-at="2022-08-02T22:31:34 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method is-config="true" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:testCases.Login@2034b64c]" started-at="2022-08-02T22:31:36 IST" name="afterMethod" finished-at="2022-08-02T22:31:36 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=validateLoginWithCorrectUserNameAndPassword status=SUCCESS method=Login.validateLoginWithCorrectUserNameAndPassword()[pri:3, instance:testCases.Login@2034b64c] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="beforeMethod()[pri:0, instance:testCases.Login@2034b64c]" started-at="2022-08-02T22:31:36 IST" name="beforeMethod" finished-at="2022-08-02T22:31:36 IST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="validateRememberMebuttonBeforeClick()[pri:4, instance:testCases.Login@2034b64c]" started-at="2022-08-02T22:31:36 IST" name="validateRememberMebuttonBeforeClick" finished-at="2022-08-02T22:31:36 IST" duration-ms="246" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- validateRememberMebuttonBeforeClick -->
        <test-method is-config="true" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:testCases.Login@2034b64c]" started-at="2022-08-02T22:31:36 IST" name="afterMethod" finished-at="2022-08-02T22:31:36 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=validateRememberMebuttonBeforeClick status=SUCCESS method=Login.validateRememberMebuttonBeforeClick()[pri:4, instance:testCases.Login@2034b64c] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="beforeMethod()[pri:0, instance:testCases.Login@2034b64c]" started-at="2022-08-02T22:31:36 IST" name="beforeMethod" finished-at="2022-08-02T22:31:36 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="validateRememberMebuttonAfterClick()[pri:5, instance:testCases.Login@2034b64c]" started-at="2022-08-02T22:31:36 IST" name="validateRememberMebuttonAfterClick" finished-at="2022-08-02T22:31:36 IST" duration-ms="254" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- validateRememberMebuttonAfterClick -->
        <test-method is-config="true" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:testCases.Login@2034b64c]" started-at="2022-08-02T22:31:36 IST" name="afterMethod" finished-at="2022-08-02T22:31:36 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=validateRememberMebuttonAfterClick status=SUCCESS method=Login.validateRememberMebuttonAfterClick()[pri:5, instance:testCases.Login@2034b64c] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method signature="validateLoginWithInvalidUserName()[pri:6, instance:testCases.Login@2034b64c]" started-at="2022-08-02T22:31:36 IST" name="validateLoginWithInvalidUserName" finished-at="2022-08-02T22:31:37 IST" duration-ms="800" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- validateLoginWithInvalidUserName -->
        <test-method is-config="true" signature="beforeMethod()[pri:0, instance:testCases.Login@2034b64c]" started-at="2022-08-02T22:31:36 IST" name="beforeMethod" finished-at="2022-08-02T22:31:36 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="validateLoginWithInvalidPassword()[pri:7, instance:testCases.Login@2034b64c]" started-at="2022-08-02T22:31:37 IST" name="validateLoginWithInvalidPassword" finished-at="2022-08-02T22:31:38 IST" duration-ms="694" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- validateLoginWithInvalidPassword -->
        <test-method is-config="true" signature="beforeMethod()[pri:0, instance:testCases.Login@2034b64c]" started-at="2022-08-02T22:31:37 IST" name="beforeMethod" finished-at="2022-08-02T22:31:37 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method is-config="true" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:testCases.Login@2034b64c]" started-at="2022-08-02T22:31:37 IST" name="afterMethod" finished-at="2022-08-02T22:31:37 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=validateLoginWithInvalidUserName status=SUCCESS method=Login.validateLoginWithInvalidUserName()[pri:6, instance:testCases.Login@2034b64c] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:testCases.Login@2034b64c]" started-at="2022-08-02T22:31:38 IST" name="afterMethod" finished-at="2022-08-02T22:31:38 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=validateLoginWithInvalidPassword status=SUCCESS method=Login.validateLoginWithInvalidPassword()[pri:7, instance:testCases.Login@2034b64c] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="afterClass()[pri:0, instance:testCases.Login@2034b64c]" started-at="2022-08-02T22:31:38 IST" name="afterClass" finished-at="2022-08-02T22:31:38 IST" duration-ms="170" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterClass -->
        <test-method is-config="true" signature="afterTest()[pri:0, instance:testCases.Login@2034b64c]" started-at="2022-08-02T22:32:31 IST" name="afterTest" finished-at="2022-08-02T22:32:32 IST" duration-ms="80" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterTest -->
      </class> <!-- testCases.Login -->
      <class name="testCases.AdminUsers">
        <test-method is-config="true" signature="beforeClass(java.lang.String)[pri:0, instance:testCases.AdminUsers@5149d738]" started-at="2022-08-02T22:31:49 IST" name="beforeClass" finished-at="2022-08-02T22:31:51 IST" duration-ms="2028" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeClass -->
        <test-method signature="validateAddNewPageOption()[pri:1, instance:testCases.AdminUsers@5149d738]" started-at="2022-08-02T22:31:51 IST" name="validateAddNewPageOption" finished-at="2022-08-02T22:31:55 IST" duration-ms="3343" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- validateAddNewPageOption -->
        <test-method is-config="true" signature="beforeMethod()[pri:0, instance:testCases.AdminUsers@5149d738]" started-at="2022-08-02T22:31:51 IST" name="beforeMethod" finished-at="2022-08-02T22:31:51 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method is-config="true" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:testCases.AdminUsers@5149d738]" started-at="2022-08-02T22:31:55 IST" name="afterMethod" finished-at="2022-08-02T22:31:55 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=validateAddNewPageOption status=SUCCESS method=AdminUsers.validateAddNewPageOption()[pri:1, instance:testCases.AdminUsers@5149d738] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method signature="validateDeletePageOption()[pri:2, instance:testCases.AdminUsers@5149d738]" started-at="2022-08-02T22:31:55 IST" name="validateDeletePageOption" finished-at="2022-08-02T22:31:56 IST" duration-ms="778" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- validateDeletePageOption -->
        <test-method is-config="true" signature="beforeMethod()[pri:0, instance:testCases.AdminUsers@5149d738]" started-at="2022-08-02T22:31:55 IST" name="beforeMethod" finished-at="2022-08-02T22:31:55 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method is-config="true" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:testCases.AdminUsers@5149d738]" started-at="2022-08-02T22:31:56 IST" name="afterMethod" finished-at="2022-08-02T22:31:56 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=validateDeletePageOption status=SUCCESS method=AdminUsers.validateDeletePageOption()[pri:2, instance:testCases.AdminUsers@5149d738] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method signature="validateLockPageButtonIsClickable()[pri:3, instance:testCases.AdminUsers@5149d738]" started-at="2022-08-02T22:31:56 IST" name="validateLockPageButtonIsClickable" finished-at="2022-08-02T22:31:56 IST" duration-ms="526" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- validateLockPageButtonIsClickable -->
        <test-method is-config="true" signature="beforeMethod()[pri:0, instance:testCases.AdminUsers@5149d738]" started-at="2022-08-02T22:31:56 IST" name="beforeMethod" finished-at="2022-08-02T22:31:56 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method is-config="true" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:testCases.AdminUsers@5149d738]" started-at="2022-08-02T22:31:56 IST" name="afterMethod" finished-at="2022-08-02T22:31:56 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=validateLockPageButtonIsClickable status=SUCCESS method=AdminUsers.validateLockPageButtonIsClickable()[pri:3, instance:testCases.AdminUsers@5149d738] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="beforeMethod()[pri:0, instance:testCases.AdminUsers@5149d738]" started-at="2022-08-02T22:31:56 IST" name="beforeMethod" finished-at="2022-08-02T22:31:56 IST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="validateUnLockPageButtonIsClickable()[pri:4, instance:testCases.AdminUsers@5149d738]" started-at="2022-08-02T22:31:56 IST" name="validateUnLockPageButtonIsClickable" finished-at="2022-08-02T22:31:57 IST" duration-ms="465" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- validateUnLockPageButtonIsClickable -->
        <test-method signature="validateActiveButtonIsClickable()[pri:5, instance:testCases.AdminUsers@5149d738]" started-at="2022-08-02T22:31:57 IST" name="validateActiveButtonIsClickable" finished-at="2022-08-02T22:31:57 IST" duration-ms="508" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- validateActiveButtonIsClickable -->
        <test-method is-config="true" signature="beforeMethod()[pri:0, instance:testCases.AdminUsers@5149d738]" started-at="2022-08-02T22:31:57 IST" name="beforeMethod" finished-at="2022-08-02T22:31:57 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method is-config="true" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:testCases.AdminUsers@5149d738]" started-at="2022-08-02T22:31:57 IST" name="afterMethod" finished-at="2022-08-02T22:31:57 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=validateUnLockPageButtonIsClickable status=SUCCESS method=AdminUsers.validateUnLockPageButtonIsClickable()[pri:4, instance:testCases.AdminUsers@5149d738] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:testCases.AdminUsers@5149d738]" started-at="2022-08-02T22:31:57 IST" name="afterMethod" finished-at="2022-08-02T22:31:57 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=validateActiveButtonIsClickable status=SUCCESS method=AdminUsers.validateActiveButtonIsClickable()[pri:5, instance:testCases.AdminUsers@5149d738] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method signature="validateInActiveButtonIsClickable()[pri:6, instance:testCases.AdminUsers@5149d738]" started-at="2022-08-02T22:31:57 IST" name="validateInActiveButtonIsClickable" finished-at="2022-08-02T22:31:58 IST" duration-ms="572" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- validateInActiveButtonIsClickable -->
        <test-method is-config="true" signature="beforeMethod()[pri:0, instance:testCases.AdminUsers@5149d738]" started-at="2022-08-02T22:31:57 IST" name="beforeMethod" finished-at="2022-08-02T22:31:57 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method is-config="true" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:testCases.AdminUsers@5149d738]" started-at="2022-08-02T22:31:58 IST" name="afterMethod" finished-at="2022-08-02T22:31:58 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=validateInActiveButtonIsClickable status=SUCCESS method=AdminUsers.validateInActiveButtonIsClickable()[pri:6, instance:testCases.AdminUsers@5149d738] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method signature="validateUpdateButton()[pri:7, instance:testCases.AdminUsers@5149d738]" started-at="2022-08-02T22:31:58 IST" name="validateUpdateButton" finished-at="2022-08-02T22:31:59 IST" duration-ms="1747" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- validateUpdateButton -->
        <test-method is-config="true" signature="beforeMethod()[pri:0, instance:testCases.AdminUsers@5149d738]" started-at="2022-08-02T22:31:58 IST" name="beforeMethod" finished-at="2022-08-02T22:31:58 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method is-config="true" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:testCases.AdminUsers@5149d738]" started-at="2022-08-02T22:31:59 IST" name="afterMethod" finished-at="2022-08-02T22:31:59 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=validateUpdateButton status=SUCCESS method=AdminUsers.validateUpdateButton()[pri:7, instance:testCases.AdminUsers@5149d738] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="afterClass()[pri:0, instance:testCases.AdminUsers@5149d738]" started-at="2022-08-02T22:31:59 IST" name="afterClass" finished-at="2022-08-02T22:32:04 IST" duration-ms="4209" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterClass -->
      </class> <!-- testCases.AdminUsers -->
      <class name="testCases.ManageLocations">
        <test-method is-config="true" signature="beforeClass(java.lang.String)[pri:0, instance:testCases.ManageLocations@4be29ed9]" started-at="2022-08-02T22:32:24 IST" name="beforeClass" finished-at="2022-08-02T22:32:26 IST" duration-ms="2282" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeClass -->
        <test-method signature="validateAddNewLocation()[pri:1, instance:testCases.ManageLocations@4be29ed9]" started-at="2022-08-02T22:32:26 IST" name="validateAddNewLocation" finished-at="2022-08-02T22:32:30 IST" duration-ms="3983" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- validateAddNewLocation -->
        <test-method is-config="true" signature="beforeMethod()[pri:0, instance:testCases.ManageLocations@4be29ed9]" started-at="2022-08-02T22:32:26 IST" name="beforeMethod" finished-at="2022-08-02T22:32:26 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="validateSearchWithCountryAndLocation()[pri:2, instance:testCases.ManageLocations@4be29ed9]" started-at="2022-08-02T22:32:30 IST" name="validateSearchWithCountryAndLocation" finished-at="2022-08-02T22:32:30 IST" duration-ms="575" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- validateSearchWithCountryAndLocation -->
        <test-method is-config="true" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:testCases.ManageLocations@4be29ed9]" started-at="2022-08-02T22:32:30 IST" name="afterMethod" finished-at="2022-08-02T22:32:30 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=validateAddNewLocation status=SUCCESS method=ManageLocations.validateAddNewLocation()[pri:1, instance:testCases.ManageLocations@4be29ed9] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="beforeMethod()[pri:0, instance:testCases.ManageLocations@4be29ed9]" started-at="2022-08-02T22:32:30 IST" name="beforeMethod" finished-at="2022-08-02T22:32:30 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method is-config="true" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:testCases.ManageLocations@4be29ed9]" started-at="2022-08-02T22:32:30 IST" name="afterMethod" finished-at="2022-08-02T22:32:30 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=validateSearchWithCountryAndLocation status=SUCCESS method=ManageLocations.validateSearchWithCountryAndLocation()[pri:2, instance:testCases.ManageLocations@4be29ed9] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method signature="validateSearchWithCountryAlone()[pri:3, instance:testCases.ManageLocations@4be29ed9]" started-at="2022-08-02T22:32:30 IST" name="validateSearchWithCountryAlone" finished-at="2022-08-02T22:32:31 IST" duration-ms="433" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- validateSearchWithCountryAlone -->
        <test-method is-config="true" signature="beforeMethod()[pri:0, instance:testCases.ManageLocations@4be29ed9]" started-at="2022-08-02T22:32:30 IST" name="beforeMethod" finished-at="2022-08-02T22:32:30 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="validateDeleteLocation()[pri:4, instance:testCases.ManageLocations@4be29ed9]" started-at="2022-08-02T22:32:31 IST" name="validateDeleteLocation" finished-at="2022-08-02T22:32:31 IST" duration-ms="458" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- validateDeleteLocation -->
        <test-method is-config="true" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:testCases.ManageLocations@4be29ed9]" started-at="2022-08-02T22:32:31 IST" name="afterMethod" finished-at="2022-08-02T22:32:31 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=validateSearchWithCountryAlone status=SUCCESS method=ManageLocations.validateSearchWithCountryAlone()[pri:3, instance:testCases.ManageLocations@4be29ed9] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="beforeMethod()[pri:0, instance:testCases.ManageLocations@4be29ed9]" started-at="2022-08-02T22:32:31 IST" name="beforeMethod" finished-at="2022-08-02T22:32:31 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method is-config="true" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:testCases.ManageLocations@4be29ed9]" started-at="2022-08-02T22:32:31 IST" name="afterMethod" finished-at="2022-08-02T22:32:31 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=validateDeleteLocation status=SUCCESS method=ManageLocations.validateDeleteLocation()[pri:4, instance:testCases.ManageLocations@4be29ed9] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method signature="validateActiveButtonStatus()[pri:5, instance:testCases.ManageLocations@4be29ed9]" started-at="2022-08-02T22:32:31 IST" name="validateActiveButtonStatus" finished-at="2022-08-02T22:32:31 IST" duration-ms="38" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- validateActiveButtonStatus -->
        <test-method is-config="true" signature="beforeMethod()[pri:0, instance:testCases.ManageLocations@4be29ed9]" started-at="2022-08-02T22:32:31 IST" name="beforeMethod" finished-at="2022-08-02T22:32:31 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method is-config="true" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:testCases.ManageLocations@4be29ed9]" started-at="2022-08-02T22:32:31 IST" name="afterMethod" finished-at="2022-08-02T22:32:31 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=validateActiveButtonStatus status=SUCCESS method=ManageLocations.validateActiveButtonStatus()[pri:5, instance:testCases.ManageLocations@4be29ed9] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="afterClass()[pri:0, instance:testCases.ManageLocations@4be29ed9]" started-at="2022-08-02T22:32:31 IST" name="afterClass" finished-at="2022-08-02T22:32:31 IST" duration-ms="128" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterClass -->
      </class> <!-- testCases.ManageLocations -->
      <class name="testCases.DashBoard">
        <test-method is-config="true" signature="beforeClass(java.lang.String)[pri:0, instance:testCases.DashBoard@6bbe85a8]" started-at="2022-08-02T22:32:04 IST" name="beforeClass" finished-at="2022-08-02T22:32:05 IST" duration-ms="1768" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeClass -->
        <test-method signature="validateAddExpenseCategory()[pri:1, instance:testCases.DashBoard@6bbe85a8]" started-at="2022-08-02T22:32:05 IST" name="validateAddExpenseCategory" finished-at="2022-08-02T22:32:08 IST" duration-ms="3051" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- validateAddExpenseCategory -->
        <test-method is-config="true" signature="beforeMethod()[pri:0, instance:testCases.DashBoard@6bbe85a8]" started-at="2022-08-02T22:32:05 IST" name="beforeMethod" finished-at="2022-08-02T22:32:05 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method is-config="true" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:testCases.DashBoard@6bbe85a8]" started-at="2022-08-02T22:32:08 IST" name="afterMethod" finished-at="2022-08-02T22:32:08 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=validateAddExpenseCategory status=SUCCESS method=DashBoard.validateAddExpenseCategory()[pri:1, instance:testCases.DashBoard@6bbe85a8] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method signature="validateUpdateExpenseCategory()[pri:2, instance:testCases.DashBoard@6bbe85a8]" started-at="2022-08-02T22:32:08 IST" name="validateUpdateExpenseCategory" finished-at="2022-08-02T22:32:10 IST" duration-ms="1332" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- validateUpdateExpenseCategory -->
        <test-method is-config="true" signature="beforeMethod()[pri:0, instance:testCases.DashBoard@6bbe85a8]" started-at="2022-08-02T22:32:08 IST" name="beforeMethod" finished-at="2022-08-02T22:32:08 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method is-config="true" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:testCases.DashBoard@6bbe85a8]" started-at="2022-08-02T22:32:10 IST" name="afterMethod" finished-at="2022-08-02T22:32:10 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=validateUpdateExpenseCategory status=SUCCESS method=DashBoard.validateUpdateExpenseCategory()[pri:2, instance:testCases.DashBoard@6bbe85a8] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method signature="validateDeleteExpenseCategory()[pri:3, instance:testCases.DashBoard@6bbe85a8]" started-at="2022-08-02T22:32:10 IST" name="validateDeleteExpenseCategory" finished-at="2022-08-02T22:32:10 IST" duration-ms="498" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- validateDeleteExpenseCategory -->
        <test-method is-config="true" signature="beforeMethod()[pri:0, instance:testCases.DashBoard@6bbe85a8]" started-at="2022-08-02T22:32:10 IST" name="beforeMethod" finished-at="2022-08-02T22:32:10 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method is-config="true" signature="afterClass()[pri:0, instance:testCases.DashBoard@6bbe85a8]" started-at="2022-08-02T22:32:10 IST" name="afterClass" finished-at="2022-08-02T22:32:10 IST" duration-ms="146" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterClass -->
        <test-method is-config="true" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:testCases.DashBoard@6bbe85a8]" started-at="2022-08-02T22:32:10 IST" name="afterMethod" finished-at="2022-08-02T22:32:10 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=validateDeleteExpenseCategory status=SUCCESS method=DashBoard.validateDeleteExpenseCategory()[pri:3, instance:testCases.DashBoard@6bbe85a8] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
      </class> <!-- testCases.DashBoard -->
    </test> <!-- ChromeTest -->
  </suite> <!-- Suite -->
</testng-results>
