<?xml version="1.0" encoding="UTF-8"?>
<testng-results ignored="6" total="32" passed="25" failed="1" skipped="0">
  <reporter-output>
  </reporter-output>
  <suite started-at="2022-07-30T22:23:44 IST" name="Suite" finished-at="2022-07-30T22:24:37 IST" duration-ms="53344">
    <groups>
    </groups>
    <test started-at="2022-07-30T22:23:44 IST" name="ChromeTest" finished-at="2022-07-30T22:24:37 IST" duration-ms="53344">
      <class name="testCases.ManagedeliveryBoy">
        <test-method is-config="true" signature="beforeClass(java.lang.String)[pri:0, instance:testCases.ManagedeliveryBoy@196a42c3]" started-at="2022-07-30T22:24:22 IST" name="beforeClass" finished-at="2022-07-30T22:24:24 IST" duration-ms="2337" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeClass -->
        <test-method signature="validateAddNewDeliveryBoy()[pri:1, instance:testCases.ManagedeliveryBoy@196a42c3]" started-at="2022-07-30T22:24:24 IST" name="validateAddNewDeliveryBoy" finished-at="2022-07-30T22:24:29 IST" duration-ms="4566" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- validateAddNewDeliveryBoy -->
        <test-method is-config="true" signature="beforeMethod()[pri:0, instance:testCases.ManagedeliveryBoy@196a42c3]" started-at="2022-07-30T22:24:24 IST" name="beforeMethod" finished-at="2022-07-30T22:24:24 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method is-config="true" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:testCases.ManagedeliveryBoy@196a42c3]" started-at="2022-07-30T22:24:29 IST" name="afterMethod" finished-at="2022-07-30T22:24:29 IST" duration-ms="3" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=validateAddNewDeliveryBoy status=SUCCESS method=ManagedeliveryBoy.validateAddNewDeliveryBoy()[pri:1, instance:testCases.ManagedeliveryBoy@196a42c3] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="beforeMethod()[pri:0, instance:testCases.ManagedeliveryBoy@196a42c3]" started-at="2022-07-30T22:24:29 IST" name="beforeMethod" finished-at="2022-07-30T22:24:29 IST" duration-ms="9" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="validateSearchDeliveryBoyWithValidName()[pri:2, instance:testCases.ManagedeliveryBoy@196a42c3]" started-at="2022-07-30T22:24:29 IST" name="validateSearchDeliveryBoyWithValidName" finished-at="2022-07-30T22:24:30 IST" duration-ms="1225" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- validateSearchDeliveryBoyWithValidName -->
        <test-method is-config="true" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:testCases.ManagedeliveryBoy@196a42c3]" started-at="2022-07-30T22:24:30 IST" name="afterMethod" finished-at="2022-07-30T22:24:30 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=validateSearchDeliveryBoyWithValidName status=SUCCESS method=ManagedeliveryBoy.validateSearchDeliveryBoyWithValidName()[pri:2, instance:testCases.ManagedeliveryBoy@196a42c3] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method signature="validateSearchDeliveryBoyWithValidPhoneNumber()[pri:3, instance:testCases.ManagedeliveryBoy@196a42c3]" started-at="2022-07-30T22:24:30 IST" name="validateSearchDeliveryBoyWithValidPhoneNumber" finished-at="2022-07-30T22:24:31 IST" duration-ms="1049" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- validateSearchDeliveryBoyWithValidPhoneNumber -->
        <test-method is-config="true" signature="beforeMethod()[pri:0, instance:testCases.ManagedeliveryBoy@196a42c3]" started-at="2022-07-30T22:24:30 IST" name="beforeMethod" finished-at="2022-07-30T22:24:30 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method is-config="true" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:testCases.ManagedeliveryBoy@196a42c3]" started-at="2022-07-30T22:24:31 IST" name="afterMethod" finished-at="2022-07-30T22:24:31 IST" duration-ms="2" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=validateSearchDeliveryBoyWithValidPhoneNumber status=SUCCESS method=ManagedeliveryBoy.validateSearchDeliveryBoyWithValidPhoneNumber()[pri:3, instance:testCases.ManagedeliveryBoy@196a42c3] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="beforeMethod()[pri:0, instance:testCases.ManagedeliveryBoy@196a42c3]" started-at="2022-07-30T22:24:31 IST" name="beforeMethod" finished-at="2022-07-30T22:24:31 IST" duration-ms="3" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="validateSearchDeliveryBoyWithValidEmail()[pri:4, instance:testCases.ManagedeliveryBoy@196a42c3]" started-at="2022-07-30T22:24:31 IST" name="validateSearchDeliveryBoyWithValidEmail" finished-at="2022-07-30T22:24:32 IST" duration-ms="1198" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- validateSearchDeliveryBoyWithValidEmail -->
        <test-method is-config="true" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:testCases.ManagedeliveryBoy@196a42c3]" started-at="2022-07-30T22:24:32 IST" name="afterMethod" finished-at="2022-07-30T22:24:32 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=validateSearchDeliveryBoyWithValidEmail status=SUCCESS method=ManagedeliveryBoy.validateSearchDeliveryBoyWithValidEmail()[pri:4, instance:testCases.ManagedeliveryBoy@196a42c3] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method signature="validateSearchDeliveryBoyWithInvalidName()[pri:5, instance:testCases.ManagedeliveryBoy@196a42c3]" started-at="2022-07-30T22:24:32 IST" name="validateSearchDeliveryBoyWithInvalidName" finished-at="2022-07-30T22:24:34 IST" duration-ms="1247" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- validateSearchDeliveryBoyWithInvalidName -->
        <test-method is-config="true" signature="beforeMethod()[pri:0, instance:testCases.ManagedeliveryBoy@196a42c3]" started-at="2022-07-30T22:24:32 IST" name="beforeMethod" finished-at="2022-07-30T22:24:32 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method is-config="true" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:testCases.ManagedeliveryBoy@196a42c3]" started-at="2022-07-30T22:24:34 IST" name="afterMethod" finished-at="2022-07-30T22:24:34 IST" duration-ms="5" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=validateSearchDeliveryBoyWithInvalidName status=SUCCESS method=ManagedeliveryBoy.validateSearchDeliveryBoyWithInvalidName()[pri:5, instance:testCases.ManagedeliveryBoy@196a42c3] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="beforeMethod()[pri:0, instance:testCases.ManagedeliveryBoy@196a42c3]" started-at="2022-07-30T22:24:34 IST" name="beforeMethod" finished-at="2022-07-30T22:24:34 IST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="validateSearchDeliveryBoyWithInvalidPhoneNumber()[pri:6, instance:testCases.ManagedeliveryBoy@196a42c3]" started-at="2022-07-30T22:24:34 IST" name="validateSearchDeliveryBoyWithInvalidPhoneNumber" finished-at="2022-07-30T22:24:35 IST" duration-ms="974" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- validateSearchDeliveryBoyWithInvalidPhoneNumber -->
        <test-method is-config="true" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:testCases.ManagedeliveryBoy@196a42c3]" started-at="2022-07-30T22:24:35 IST" name="afterMethod" finished-at="2022-07-30T22:24:35 IST" duration-ms="5" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=validateSearchDeliveryBoyWithInvalidPhoneNumber status=SUCCESS method=ManagedeliveryBoy.validateSearchDeliveryBoyWithInvalidPhoneNumber()[pri:6, instance:testCases.ManagedeliveryBoy@196a42c3] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="beforeMethod()[pri:0, instance:testCases.ManagedeliveryBoy@196a42c3]" started-at="2022-07-30T22:24:35 IST" name="beforeMethod" finished-at="2022-07-30T22:24:35 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="validateSearchDeliveryBoyWithInvalidEmail()[pri:7, instance:testCases.ManagedeliveryBoy@196a42c3]" started-at="2022-07-30T22:24:35 IST" name="validateSearchDeliveryBoyWithInvalidEmail" finished-at="2022-07-30T22:24:36 IST" duration-ms="1284" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- validateSearchDeliveryBoyWithInvalidEmail -->
        <test-method is-config="true" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:testCases.ManagedeliveryBoy@196a42c3]" started-at="2022-07-30T22:24:36 IST" name="afterMethod" finished-at="2022-07-30T22:24:36 IST" duration-ms="2" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=validateSearchDeliveryBoyWithInvalidEmail status=SUCCESS method=ManagedeliveryBoy.validateSearchDeliveryBoyWithInvalidEmail()[pri:7, instance:testCases.ManagedeliveryBoy@196a42c3] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="beforeMethod()[pri:0, instance:testCases.ManagedeliveryBoy@196a42c3]" started-at="2022-07-30T22:24:36 IST" name="beforeMethod" finished-at="2022-07-30T22:24:36 IST" duration-ms="2" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="validateDeleteDeliveryBoy()[pri:8, instance:testCases.ManagedeliveryBoy@196a42c3]" started-at="2022-07-30T22:24:36 IST" name="validateDeleteDeliveryBoy" finished-at="2022-07-30T22:24:37 IST" duration-ms="847" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- validateDeleteDeliveryBoy -->
        <test-method is-config="true" signature="afterClass()[pri:0, instance:testCases.ManagedeliveryBoy@196a42c3]" started-at="2022-07-30T22:24:37 IST" name="afterClass" finished-at="2022-07-30T22:24:37 IST" duration-ms="297" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterClass -->
        <test-method is-config="true" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:testCases.ManagedeliveryBoy@196a42c3]" started-at="2022-07-30T22:24:37 IST" name="afterMethod" finished-at="2022-07-30T22:24:37 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=validateDeleteDeliveryBoy status=SUCCESS method=ManagedeliveryBoy.validateDeleteDeliveryBoy()[pri:8, instance:testCases.ManagedeliveryBoy@196a42c3] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
      </class> <!-- testCases.ManagedeliveryBoy -->
      <class name="testCases.ManagePages">
        <test-method is-config="true" signature="beforeClass(java.lang.String)[pri:0, instance:testCases.ManagePages@17f9d882]" started-at="2022-07-30T22:23:56 IST" name="beforeClass" finished-at="2022-07-30T22:23:59 IST" duration-ms="2946" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeClass -->
        <test-method signature="validateManagePagesSearchOptionWithPageName()[pri:1, instance:testCases.ManagePages@17f9d882]" started-at="2022-07-30T22:23:59 IST" name="validateManagePagesSearchOptionWithPageName" finished-at="2022-07-30T22:24:03 IST" duration-ms="4188" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- validateManagePagesSearchOptionWithPageName -->
        <test-method is-config="true" signature="beforeMethod()[pri:0, instance:testCases.ManagePages@17f9d882]" started-at="2022-07-30T22:23:59 IST" name="beforeMethod" finished-at="2022-07-30T22:23:59 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method is-config="true" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:testCases.ManagePages@17f9d882]" started-at="2022-07-30T22:24:03 IST" name="afterMethod" finished-at="2022-07-30T22:24:03 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=validateManagePagesSearchOptionWithPageName status=SUCCESS method=ManagePages.validateManagePagesSearchOptionWithPageName()[pri:1, instance:testCases.ManagePages@17f9d882] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="beforeMethod()[pri:0, instance:testCases.ManagePages@17f9d882]" started-at="2022-07-30T22:24:03 IST" name="beforeMethod" finished-at="2022-07-30T22:24:03 IST" duration-ms="3" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="validateTextBoxesinAddNewPageOption()[pri:2, instance:testCases.ManagePages@17f9d882]" started-at="2022-07-30T22:24:03 IST" name="validateTextBoxesinAddNewPageOption" finished-at="2022-07-30T22:24:04 IST" duration-ms="1703" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- validateTextBoxesinAddNewPageOption -->
        <test-method is-config="true" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:testCases.ManagePages@17f9d882]" started-at="2022-07-30T22:24:04 IST" name="afterMethod" finished-at="2022-07-30T22:24:04 IST" duration-ms="2" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=validateTextBoxesinAddNewPageOption status=SUCCESS method=ManagePages.validateTextBoxesinAddNewPageOption()[pri:2, instance:testCases.ManagePages@17f9d882] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method signature="validateUploadImagesinAddNewPageOption()[pri:3, instance:testCases.ManagePages@17f9d882]" started-at="2022-07-30T22:24:04 IST" name="validateUploadImagesinAddNewPageOption" finished-at="2022-07-30T22:24:05 IST" duration-ms="412" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- validateUploadImagesinAddNewPageOption -->
        <test-method is-config="true" signature="beforeMethod()[pri:0, instance:testCases.ManagePages@17f9d882]" started-at="2022-07-30T22:24:04 IST" name="beforeMethod" finished-at="2022-07-30T22:24:04 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method is-config="true" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:testCases.ManagePages@17f9d882]" started-at="2022-07-30T22:24:05 IST" name="afterMethod" finished-at="2022-07-30T22:24:05 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=validateUploadImagesinAddNewPageOption status=SUCCESS method=ManagePages.validateUploadImagesinAddNewPageOption()[pri:3, instance:testCases.ManagePages@17f9d882] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="beforeMethod()[pri:0, instance:testCases.ManagePages@17f9d882]" started-at="2022-07-30T22:24:05 IST" name="beforeMethod" finished-at="2022-07-30T22:24:05 IST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="validateDeleteButton()[pri:4, instance:testCases.ManagePages@17f9d882]" started-at="2022-07-30T22:24:05 IST" name="validateDeleteButton" finished-at="2022-07-30T22:24:06 IST" duration-ms="773" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- validateDeleteButton -->
        <test-method is-config="true" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:testCases.ManagePages@17f9d882]" started-at="2022-07-30T22:24:06 IST" name="afterMethod" finished-at="2022-07-30T22:24:06 IST" duration-ms="16" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=validateDeleteButton status=SUCCESS method=ManagePages.validateDeleteButton()[pri:4, instance:testCases.ManagePages@17f9d882] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method signature="validateAddNewPageOption(java.lang.String,java.lang.String,java.lang.String)[pri:5, instance:testCases.ManagePages@17f9d882]" started-at="2022-07-30T22:24:06 IST" name="validateAddNewPageOption" data-provider="manage pages" finished-at="2022-07-30T22:24:10 IST" duration-ms="4193" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[Flowers]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Flowers]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[Roses are Red Flowers]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- validateAddNewPageOption -->
        <test-method is-config="true" signature="beforeMethod()[pri:0, instance:testCases.ManagePages@17f9d882]" started-at="2022-07-30T22:24:06 IST" name="beforeMethod" finished-at="2022-07-30T22:24:06 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method is-config="true" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:testCases.ManagePages@17f9d882]" started-at="2022-07-30T22:24:10 IST" name="afterMethod" finished-at="2022-07-30T22:24:10 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=validateAddNewPageOption status=SUCCESS method=ManagePages.validateAddNewPageOption(java.lang.String,java.lang.String,java.lang.String)[pri:5, instance:testCases.ManagePages@17f9d882] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="afterClass()[pri:0, instance:testCases.ManagePages@17f9d882]" started-at="2022-07-30T22:24:10 IST" name="afterClass" finished-at="2022-07-30T22:24:10 IST" duration-ms="263" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterClass -->
      </class> <!-- testCases.ManagePages -->
      <class name="testCases.Login">
        <test-method is-config="true" signature="beforeTest()[pri:0, instance:testCases.Login@53fb3dab]" started-at="2022-07-30T22:23:44 IST" name="beforeTest" finished-at="2022-07-30T22:23:44 IST" duration-ms="16" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeTest -->
        <test-method is-config="true" signature="beforeClass(java.lang.String)[pri:0, instance:testCases.Login@53fb3dab]" started-at="2022-07-30T22:23:44 IST" name="beforeClass" finished-at="2022-07-30T22:23:48 IST" duration-ms="4202" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeClass -->
        <test-method is-config="true" signature="beforeMethod()[pri:0, instance:testCases.Login@53fb3dab]" started-at="2022-07-30T22:23:48 IST" name="beforeMethod" finished-at="2022-07-30T22:23:48 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="validateLoginWithPasswordAlone()[pri:1, instance:testCases.Login@53fb3dab]" started-at="2022-07-30T22:23:48 IST" name="validateLoginWithPasswordAlone" finished-at="2022-07-30T22:23:49 IST" duration-ms="1082" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- validateLoginWithPasswordAlone -->
        <test-method is-config="true" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:testCases.Login@53fb3dab]" started-at="2022-07-30T22:23:49 IST" name="afterMethod" finished-at="2022-07-30T22:23:49 IST" duration-ms="2" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=validateLoginWithPasswordAlone status=SUCCESS method=Login.validateLoginWithPasswordAlone()[pri:1, instance:testCases.Login@53fb3dab] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="beforeMethod()[pri:0, instance:testCases.Login@53fb3dab]" started-at="2022-07-30T22:23:49 IST" name="beforeMethod" finished-at="2022-07-30T22:23:49 IST" duration-ms="9" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="validateLoginWithUserNameAlone()[pri:2, instance:testCases.Login@53fb3dab]" started-at="2022-07-30T22:23:49 IST" name="validateLoginWithUserNameAlone" finished-at="2022-07-30T22:23:50 IST" duration-ms="787" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- validateLoginWithUserNameAlone -->
        <test-method is-config="true" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:testCases.Login@53fb3dab]" started-at="2022-07-30T22:23:50 IST" name="afterMethod" finished-at="2022-07-30T22:23:50 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=validateLoginWithUserNameAlone status=SUCCESS method=Login.validateLoginWithUserNameAlone()[pri:2, instance:testCases.Login@53fb3dab] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="beforeMethod()[pri:0, instance:testCases.Login@53fb3dab]" started-at="2022-07-30T22:23:50 IST" name="beforeMethod" finished-at="2022-07-30T22:23:50 IST" duration-ms="5" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="validateLoginWithCorrectUserNameAndPassword()[pri:3, instance:testCases.Login@53fb3dab]" started-at="2022-07-30T22:23:50 IST" name="validateLoginWithCorrectUserNameAndPassword" finished-at="2022-07-30T22:23:52 IST" duration-ms="2242" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- validateLoginWithCorrectUserNameAndPassword -->
        <test-method is-config="true" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:testCases.Login@53fb3dab]" started-at="2022-07-30T22:23:52 IST" name="afterMethod" finished-at="2022-07-30T22:23:52 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=validateLoginWithCorrectUserNameAndPassword status=SUCCESS method=Login.validateLoginWithCorrectUserNameAndPassword()[pri:3, instance:testCases.Login@53fb3dab] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method signature="validateRememberMebuttonBeforeClick()[pri:4, instance:testCases.Login@53fb3dab]" started-at="2022-07-30T22:23:52 IST" name="validateRememberMebuttonBeforeClick" finished-at="2022-07-30T22:23:52 IST" duration-ms="225" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- validateRememberMebuttonBeforeClick -->
        <test-method is-config="true" signature="beforeMethod()[pri:0, instance:testCases.Login@53fb3dab]" started-at="2022-07-30T22:23:52 IST" name="beforeMethod" finished-at="2022-07-30T22:23:52 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method is-config="true" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:testCases.Login@53fb3dab]" started-at="2022-07-30T22:23:52 IST" name="afterMethod" finished-at="2022-07-30T22:23:52 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=validateRememberMebuttonBeforeClick status=SUCCESS method=Login.validateRememberMebuttonBeforeClick()[pri:4, instance:testCases.Login@53fb3dab] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="beforeMethod()[pri:0, instance:testCases.Login@53fb3dab]" started-at="2022-07-30T22:23:52 IST" name="beforeMethod" finished-at="2022-07-30T22:23:52 IST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="validateRememberMebuttonAfterClick()[pri:5, instance:testCases.Login@53fb3dab]" started-at="2022-07-30T22:23:52 IST" name="validateRememberMebuttonAfterClick" finished-at="2022-07-30T22:23:53 IST" duration-ms="236" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- validateRememberMebuttonAfterClick -->
        <test-method is-config="true" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:testCases.Login@53fb3dab]" started-at="2022-07-30T22:23:53 IST" name="afterMethod" finished-at="2022-07-30T22:23:53 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=validateRememberMebuttonAfterClick status=SUCCESS method=Login.validateRememberMebuttonAfterClick()[pri:5, instance:testCases.Login@53fb3dab] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method signature="validateLoginWithInvalidUserName()[pri:6, instance:testCases.Login@53fb3dab]" started-at="2022-07-30T22:23:53 IST" name="validateLoginWithInvalidUserName" finished-at="2022-07-30T22:23:54 IST" duration-ms="1085" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- validateLoginWithInvalidUserName -->
        <test-method is-config="true" signature="beforeMethod()[pri:0, instance:testCases.Login@53fb3dab]" started-at="2022-07-30T22:23:53 IST" name="beforeMethod" finished-at="2022-07-30T22:23:53 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method is-config="true" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:testCases.Login@53fb3dab]" started-at="2022-07-30T22:23:54 IST" name="afterMethod" finished-at="2022-07-30T22:23:54 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=validateLoginWithInvalidUserName status=SUCCESS method=Login.validateLoginWithInvalidUserName()[pri:6, instance:testCases.Login@53fb3dab] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="beforeMethod()[pri:0, instance:testCases.Login@53fb3dab]" started-at="2022-07-30T22:23:54 IST" name="beforeMethod" finished-at="2022-07-30T22:23:54 IST" duration-ms="5" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="validateLoginWithInvalidPassword()[pri:7, instance:testCases.Login@53fb3dab]" started-at="2022-07-30T22:23:54 IST" name="validateLoginWithInvalidPassword" finished-at="2022-07-30T22:23:55 IST" duration-ms="1353" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- validateLoginWithInvalidPassword -->
        <test-method is-config="true" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:testCases.Login@53fb3dab]" started-at="2022-07-30T22:23:55 IST" name="afterMethod" finished-at="2022-07-30T22:23:55 IST" duration-ms="2" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=validateLoginWithInvalidPassword status=SUCCESS method=Login.validateLoginWithInvalidPassword()[pri:7, instance:testCases.Login@53fb3dab] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="afterClass()[pri:0, instance:testCases.Login@53fb3dab]" started-at="2022-07-30T22:23:55 IST" name="afterClass" finished-at="2022-07-30T22:23:56 IST" duration-ms="403" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterClass -->
        <test-method is-config="true" signature="afterTest()[pri:0, instance:testCases.Login@53fb3dab]" started-at="2022-07-30T22:24:37 IST" name="afterTest" finished-at="2022-07-30T22:24:37 IST" duration-ms="87" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterTest -->
      </class> <!-- testCases.Login -->
      <class name="testCases.AdminUsers">
        <test-method is-config="true" signature="beforeClass(java.lang.String)[pri:0, instance:testCases.AdminUsers@79e4c792]" started-at="2022-07-30T22:24:10 IST" name="beforeClass" finished-at="2022-07-30T22:24:13 IST" duration-ms="2736" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeClass -->
        <test-method signature="validateAddNewPageOption()[pri:1, instance:testCases.AdminUsers@79e4c792]" started-at="2022-07-30T22:24:13 IST" name="validateAddNewPageOption" finished-at="2022-07-30T22:24:17 IST" duration-ms="4099" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- validateAddNewPageOption -->
        <test-method is-config="true" signature="beforeMethod()[pri:0, instance:testCases.AdminUsers@79e4c792]" started-at="2022-07-30T22:24:13 IST" name="beforeMethod" finished-at="2022-07-30T22:24:13 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method is-config="true" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:testCases.AdminUsers@79e4c792]" started-at="2022-07-30T22:24:17 IST" name="afterMethod" finished-at="2022-07-30T22:24:17 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=validateAddNewPageOption status=SUCCESS method=AdminUsers.validateAddNewPageOption()[pri:1, instance:testCases.AdminUsers@79e4c792] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="beforeMethod()[pri:0, instance:testCases.AdminUsers@79e4c792]" started-at="2022-07-30T22:24:17 IST" name="beforeMethod" finished-at="2022-07-30T22:24:17 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="validateDeletePageOption()[pri:2, instance:testCases.AdminUsers@79e4c792]" started-at="2022-07-30T22:24:17 IST" name="validateDeletePageOption" finished-at="2022-07-30T22:24:18 IST" duration-ms="700" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- validateDeletePageOption -->
        <test-method is-config="true" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:testCases.AdminUsers@79e4c792]" started-at="2022-07-30T22:24:18 IST" name="afterMethod" finished-at="2022-07-30T22:24:18 IST" duration-ms="2" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=validateDeletePageOption status=SUCCESS method=AdminUsers.validateDeletePageOption()[pri:2, instance:testCases.AdminUsers@79e4c792] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="beforeMethod()[pri:0, instance:testCases.AdminUsers@79e4c792]" started-at="2022-07-30T22:24:18 IST" name="beforeMethod" finished-at="2022-07-30T22:24:18 IST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="validateLockPageButtonIsClickable()[pri:3, instance:testCases.AdminUsers@79e4c792]" started-at="2022-07-30T22:24:18 IST" name="validateLockPageButtonIsClickable" finished-at="2022-07-30T22:24:19 IST" duration-ms="1174" status="FAIL">
          <exception class="org.openqa.selenium.ElementClickInterceptedException">
            <message>
              <![CDATA[element click intercepted: Element is not clickable at point (1300, 917)
  (Session info: chrome=103.0.5060.134)
Build info: version: '4.2.1', revision: 'ac4d0fdd4a'
System info: host: 'LAPTOP-IH7D7O72', ip: '192.168.1.35', os.name: 'Windows 11', os.arch: 'amd64', os.version: '10.0', java.version: '17.0.2'
Driver info: org.openqa.selenium.chrome.ChromeDriver
Command: [0e5a3ce7856057e161f789a7bbd43465, clickElement {id=f9a529d1-2a12-45cd-8687-54cb0ea4a1c3}]
Capabilities {acceptInsecureCerts: false, browserName: chrome, browserVersion: 103.0.5060.134, chrome: {chromedriverVersion: 103.0.5060.134 (8ec6fce403b..., userDataDir: C:\Users\91859\AppData\Loca...}, goog:chromeOptions: {debuggerAddress: localhost:60024}, networkConnectionEnabled: false, pageLoadStrategy: normal, platformName: WINDOWS, proxy: Proxy(), se:cdp: ws://localhost:60024/devtoo..., se:cdpVersion: 103.0.5060.134, setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, webauthn:extension:credBlob: true, webauthn:extension:largeBlob: true, webauthn:virtualAuthenticators: true}
Element: [[ChromeDriver: chrome on WINDOWS (0e5a3ce7856057e161f789a7bbd43465)] -> xpath: (//a[@class='btn btn-sm btn-danger btn-rounded'][1])]
Session ID: 0e5a3ce7856057e161f789a7bbd43465]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.openqa.selenium.ElementClickInterceptedException: element click intercepted: Element is not clickable at point (1300, 917)
  (Session info: chrome=103.0.5060.134)
Build info: version: '4.2.1', revision: 'ac4d0fdd4a'
System info: host: 'LAPTOP-IH7D7O72', ip: '192.168.1.35', os.name: 'Windows 11', os.arch: 'amd64', os.version: '10.0', java.version: '17.0.2'
Driver info: org.openqa.selenium.chrome.ChromeDriver
Command: [0e5a3ce7856057e161f789a7bbd43465, clickElement {id=f9a529d1-2a12-45cd-8687-54cb0ea4a1c3}]
Capabilities {acceptInsecureCerts: false, browserName: chrome, browserVersion: 103.0.5060.134, chrome: {chromedriverVersion: 103.0.5060.134 (8ec6fce403b..., userDataDir: C:\Users\91859\AppData\Loca...}, goog:chromeOptions: {debuggerAddress: localhost:60024}, networkConnectionEnabled: false, pageLoadStrategy: normal, platformName: WINDOWS, proxy: Proxy(), se:cdp: ws://localhost:60024/devtoo..., se:cdpVersion: 103.0.5060.134, setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, webauthn:extension:credBlob: true, webauthn:extension:largeBlob: true, webauthn:virtualAuthenticators: true}
Element: [[ChromeDriver: chrome on WINDOWS (0e5a3ce7856057e161f789a7bbd43465)] -> xpath: (//a[@class='btn btn-sm btn-danger btn-rounded'][1])]
Session ID: 0e5a3ce7856057e161f789a7bbd43465
at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:77)
at java.base/jdk.internal.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
at java.base/java.lang.reflect.Constructor.newInstanceWithCaller(Constructor.java:499)
at java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:480)
at org.openqa.selenium.remote.codec.w3c.W3CHttpResponseCodec.createException(W3CHttpResponseCodec.java:200)
at org.openqa.selenium.remote.codec.w3c.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:133)
at org.openqa.selenium.remote.codec.w3c.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:53)
at org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:184)
at org.openqa.selenium.remote.service.DriverCommandExecutor.invokeExecute(DriverCommandExecutor.java:167)
at org.openqa.selenium.remote.service.DriverCommandExecutor.execute(DriverCommandExecutor.java:142)
at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:551)
at org.openqa.selenium.remote.RemoteWebElement.execute(RemoteWebElement.java:257)
at org.openqa.selenium.remote.RemoteWebElement.click(RemoteWebElement.java:78)
at jdk.internal.reflect.GeneratedMethodAccessor1.invoke(Unknown Source)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:568)
at org.openqa.selenium.support.pagefactory.internal.LocatingElementHandler.invoke(LocatingElementHandler.java:52)
at jdk.proxy2/jdk.proxy2.$Proxy22.click(Unknown Source)
at elementRepository.AdminUsersElements.clickLockButton(AdminUsersElements.java:105)
at testCases.AdminUsers.validateLockPageButtonIsClickable(AdminUsers.java:59)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:568)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:139)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:677)
at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:221)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:50)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:962)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:194)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:148)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
at org.testng.TestRunner.privateRun(TestRunner.java:806)
at org.testng.TestRunner.run(TestRunner.java:601)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:433)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:427)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:387)
at org.testng.SuiteRunner.run(SuiteRunner.java:330)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:95)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1256)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1176)
at org.testng.TestNG.runSuites(TestNG.java:1099)
at org.testng.TestNG.run(TestNG.java:1067)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- org.openqa.selenium.ElementClickInterceptedException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- validateLockPageButtonIsClickable -->
        <test-method is-config="true" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:testCases.AdminUsers@79e4c792]" started-at="2022-07-30T22:24:19 IST" name="afterMethod" finished-at="2022-07-30T22:24:19 IST" duration-ms="401" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=validateLockPageButtonIsClickable status=FAILURE method=AdminUsers.validateLockPageButtonIsClickable()[pri:3, instance:testCases.AdminUsers@79e4c792] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method signature="validateUnLockPageButtonIsClickable()[pri:4, instance:testCases.AdminUsers@79e4c792]" started-at="2022-07-30T22:24:19 IST" name="validateUnLockPageButtonIsClickable" finished-at="2022-07-30T22:24:20 IST" duration-ms="709" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- validateUnLockPageButtonIsClickable -->
        <test-method is-config="true" signature="beforeMethod()[pri:0, instance:testCases.AdminUsers@79e4c792]" started-at="2022-07-30T22:24:19 IST" name="beforeMethod" finished-at="2022-07-30T22:24:19 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method is-config="true" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:testCases.AdminUsers@79e4c792]" started-at="2022-07-30T22:24:20 IST" name="afterMethod" finished-at="2022-07-30T22:24:20 IST" duration-ms="2" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=validateUnLockPageButtonIsClickable status=SUCCESS method=AdminUsers.validateUnLockPageButtonIsClickable()[pri:4, instance:testCases.AdminUsers@79e4c792] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="beforeMethod()[pri:0, instance:testCases.AdminUsers@79e4c792]" started-at="2022-07-30T22:24:20 IST" name="beforeMethod" finished-at="2022-07-30T22:24:20 IST" duration-ms="2" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="validateActiveButtonIsClickable()[pri:5, instance:testCases.AdminUsers@79e4c792]" started-at="2022-07-30T22:24:20 IST" name="validateActiveButtonIsClickable" finished-at="2022-07-30T22:24:21 IST" duration-ms="790" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- validateActiveButtonIsClickable -->
        <test-method is-config="true" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:testCases.AdminUsers@79e4c792]" started-at="2022-07-30T22:24:21 IST" name="afterMethod" finished-at="2022-07-30T22:24:21 IST" duration-ms="4" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=validateActiveButtonIsClickable status=SUCCESS method=AdminUsers.validateActiveButtonIsClickable()[pri:5, instance:testCases.AdminUsers@79e4c792] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="beforeMethod()[pri:0, instance:testCases.AdminUsers@79e4c792]" started-at="2022-07-30T22:24:21 IST" name="beforeMethod" finished-at="2022-07-30T22:24:21 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="validateInActiveButtonIsClickable()[pri:6, instance:testCases.AdminUsers@79e4c792]" started-at="2022-07-30T22:24:21 IST" name="validateInActiveButtonIsClickable" finished-at="2022-07-30T22:24:22 IST" duration-ms="894" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- validateInActiveButtonIsClickable -->
        <test-method is-config="true" signature="afterClass()[pri:0, instance:testCases.AdminUsers@79e4c792]" started-at="2022-07-30T22:24:22 IST" name="afterClass" finished-at="2022-07-30T22:24:22 IST" duration-ms="302" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterClass -->
        <test-method is-config="true" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:testCases.AdminUsers@79e4c792]" started-at="2022-07-30T22:24:22 IST" name="afterMethod" finished-at="2022-07-30T22:24:22 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=validateInActiveButtonIsClickable status=SUCCESS method=AdminUsers.validateInActiveButtonIsClickable()[pri:6, instance:testCases.AdminUsers@79e4c792] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
      </class> <!-- testCases.AdminUsers -->
    </test> <!-- ChromeTest -->
  </suite> <!-- Suite -->
</testng-results>
